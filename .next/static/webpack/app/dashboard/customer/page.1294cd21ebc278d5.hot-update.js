"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/customer/page",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"9897b4114ce1\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJEOlxcTmV4dGpzIHByb2plY3RzXFxzbGlxSW52b2ljZS1kYXNoYm9hcmRcXHNyY1xcYXBwXFxnbG9iYWxzLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjk4OTdiNDExNGNlMVwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/dropdownUtils.js":
/*!**********************************!*\
  !*** ./src/lib/dropdownUtils.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanupDropdowns: () => (/* binding */ cleanupDropdowns),\n/* harmony export */   closeAllDropdowns: () => (/* binding */ closeAllDropdowns),\n/* harmony export */   closeDropdown: () => (/* binding */ closeDropdown),\n/* harmony export */   debugDropdowns: () => (/* binding */ debugDropdowns),\n/* harmony export */   initializeDropdowns: () => (/* binding */ initializeDropdowns)\n/* harmony export */ });\n// Utility functions for dropdown and toggle functionality\nlet isInitialized = false;\nlet dropdownHandler = null;\nlet toggleHandler = null;\nlet preventCloseHandler = null;\n// Initialize dropdown functionality\nconst initializeDropdowns = ()=>{\n    // Prevent multiple initializations\n    if (isInitialized) {\n        return;\n    }\n    // Dropdown toggle handler\n    dropdownHandler = (e)=>{\n        const dropdownToggle = e.target.closest('[data-bs-toggle=\"dropdown\"]');\n        if (dropdownToggle) {\n            e.preventDefault();\n            e.stopPropagation();\n            const dropdown = dropdownToggle.nextElementSibling;\n            // Close all other dropdowns first\n            document.querySelectorAll('.dropdown-menu.show').forEach((menu)=>{\n                if (menu !== dropdown) {\n                    menu.classList.remove('show');\n                }\n            });\n            // Toggle current dropdown\n            if (dropdown && dropdown.classList.contains('dropdown-menu')) {\n                const isOpening = !dropdown.classList.contains('show');\n                dropdown.classList.toggle('show');\n                // Update parent dropdown container state\n                const dropdownContainer = dropdownToggle.closest('.dropdown');\n                if (dropdownContainer) {\n                    dropdownContainer.classList.toggle('show', isOpening);\n                }\n                // Position dropdown if needed\n                if (isOpening) {\n                    const rect = dropdownToggle.getBoundingClientRect();\n                    const dropdownRect = dropdown.getBoundingClientRect();\n                    // Adjust position if dropdown goes off screen\n                    if (rect.right + dropdownRect.width > window.innerWidth) {\n                        dropdown.style.left = 'auto';\n                        dropdown.style.right = '0';\n                    }\n                }\n            }\n        } else {\n            // Close dropdowns when clicking outside\n            const isDropdownContent = e.target.closest('.dropdown-menu');\n            const isToggleButton = e.target.closest('[data-target]');\n            if (!isDropdownContent && !isToggleButton) {\n                document.querySelectorAll('.dropdown-menu.show').forEach((menu)=>{\n                    menu.classList.remove('show');\n                    // Remove active state from parent dropdown\n                    const dropdownContainer = menu.closest('.dropdown');\n                    if (dropdownContainer) {\n                        dropdownContainer.classList.remove('show');\n                    }\n                });\n                document.querySelectorAll('.toggle-content.show').forEach((content)=>{\n                    content.classList.remove('show');\n                });\n            }\n        }\n    };\n    // Toggle functionality handler\n    toggleHandler = (e)=>{\n        const toggleBtn = e.target.closest('[data-target]');\n        if (toggleBtn) {\n            e.preventDefault();\n            e.stopPropagation();\n            const targetSelector = toggleBtn.getAttribute('data-target');\n            const targetElements = document.querySelectorAll('[data-content=\"'.concat(targetSelector, '\"]'));\n            targetElements.forEach((element)=>{\n                element.classList.toggle('show');\n            });\n        }\n    };\n    // Prevent dropdown from closing when clicking inside\n    preventCloseHandler = (e)=>{\n        const dropdownMenu = e.target.closest('.dropdown-menu');\n        if (dropdownMenu && !e.target.closest('a[href=\"#\"], button')) {\n            e.stopPropagation();\n        }\n    };\n    // Add event listeners\n    document.addEventListener('click', dropdownHandler, true);\n    document.addEventListener('click', toggleHandler, true);\n    document.addEventListener('click', preventCloseHandler, true);\n    isInitialized = true;\n    console.log('✅ Dropdown functionality initialized');\n};\n// Clean up dropdown functionality\nconst cleanupDropdowns = ()=>{\n    if (!isInitialized) {\n        return;\n    }\n    // Remove event listeners\n    if (dropdownHandler) {\n        document.removeEventListener('click', dropdownHandler, true);\n        dropdownHandler = null;\n    }\n    if (toggleHandler) {\n        document.removeEventListener('click', toggleHandler, true);\n        toggleHandler = null;\n    }\n    if (preventCloseHandler) {\n        document.removeEventListener('click', preventCloseHandler, true);\n        preventCloseHandler = null;\n    }\n    // Close all open dropdowns and toggles\n    document.querySelectorAll('.dropdown-menu.show').forEach((menu)=>{\n        menu.classList.remove('show');\n        // Remove active state from parent dropdown\n        const dropdownContainer = menu.closest('.dropdown');\n        if (dropdownContainer) {\n            dropdownContainer.classList.remove('show');\n        }\n    });\n    document.querySelectorAll('.toggle-content.show').forEach((content)=>{\n        content.classList.remove('show');\n    });\n    isInitialized = false;\n    console.log('🧹 Dropdown functionality cleaned up');\n};\n// Force close dropdown by selector\nconst closeDropdown = (selector)=>{\n    const dropdown = document.querySelector(selector);\n    if (dropdown) {\n        dropdown.classList.remove('show');\n        // Remove active state from parent dropdown\n        const dropdownContainer = dropdown.closest('.dropdown');\n        if (dropdownContainer) {\n            dropdownContainer.classList.remove('show');\n        }\n        console.log(\"\\uD83D\\uDD12 Manually closed dropdown: \".concat(selector));\n    } else {\n        console.warn(\"⚠️ Dropdown not found: \".concat(selector));\n    }\n};\n// Close all dropdowns\nconst closeAllDropdowns = ()=>{\n    document.querySelectorAll('.dropdown-menu.show').forEach((menu)=>{\n        menu.classList.remove('show');\n        // Remove active state from parent dropdown\n        const dropdownContainer = menu.closest('.dropdown');\n        if (dropdownContainer) {\n            dropdownContainer.classList.remove('show');\n        }\n    });\n    document.querySelectorAll('.toggle-content.show').forEach((content)=>{\n        content.classList.remove('show');\n    });\n    console.log('🔒 All dropdowns closed');\n};\n// Debug function to check dropdown state\nconst debugDropdowns = ()=>{\n    const openDropdowns = document.querySelectorAll('.dropdown-menu.show');\n    const openToggles = document.querySelectorAll('.toggle-content.show');\n    console.log('🔍 Dropdown Debug Info:', {\n        initialized: isInitialized,\n        openDropdowns: openDropdowns.length,\n        openToggles: openToggles.length,\n        dropdownElements: Array.from(openDropdowns).map((el)=>el.className),\n        toggleElements: Array.from(openToggles).map((el)=>el.className)\n    });\n    return {\n        initialized: isInitialized,\n        openDropdowns: openDropdowns.length,\n        openToggles: openToggles.length\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/dropdownUtils.js\n"));

/***/ })

});